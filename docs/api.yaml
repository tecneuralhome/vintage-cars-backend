openapi: 3.0.0
info:
  title: Vintage Cars API
  version: 1.0.0
  description: API documentation for Vintage Cars
servers:
  - url: http://localhost:8080
components:
  securitySchemes:
    JwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'JWT authorization token'
security:
  - JwtAuth: []
paths:
  /user/generate-otp/:
    post:
      summary: Generate one-time password.
      description: API to generate one-time password.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - number
                - type
              properties:
                number:
                  type: string
                  description: The user's mobile number (India number only acceptable)
                  example: "6382345678"
                type:
                  type: string
                  description: The request type is register or update.
                  example: "register"
      responses:
        200:
          description: Verification code
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Verification code is 506845"
  /user/register/:
    post:
      summary: Register user information.
      description: API to verify the verification code and register the user info
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - otp
                - username
                - email
                - number
                - usertype
                - password
              properties:
                otp:
                  type: number
                  description: Enter the six-digit verification code.
                  example: 506845
                username:
                  type: string
                  description: Enter the username
                  example: "newuser"
                email:
                  type: string
                  format: email
                  description: Enter the email address.
                  example: "user@example.com"
                number:
                  type: string
                  description: The user's mobile number (India number only acceptable)
                  example: "6382345678"
                usertype:
                  type: string
                  description: Enter the user type example user or admin
                  example: "user"
                password:
                  type: string
                  format: password
                  description: Enter the password.
                  example: "password@123"
      responses:
        200:
          description: Successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Successfully Registered"
                  token:
                    type: string
                    nullable: true
                    description: Authorization token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
  /user/login/:
    post:
      summary: sign in a user account.
      description: API to sign in a user account with an email and password.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Enter the email address.
                  example: "user@gmail.com"
                password:
                  type: string
                  format: password
                  description: Enter the password.
                  example: "password@123"
      responses:
        200:
          description: Login result
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Successfully Login"
                  token:
                    type: string
                    nullable: true
                    description: Authorization token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
  /user/list/:
    get:
      summary: Get the user's account with info lists.
      description: API to get user's account with information list
      responses:
        200:
          description: Successfully retrieved the users list
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Successfully retrieved the users list"
                  users:
                    description: List of users
                    example: []
  /user/update-user-info/:
    put:
      summary: Update users information
      description: API to update users information.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - username
                - password
                - image
              properties:
                username:
                  type: string
                  description: Enter the username
                  example: "newuser"
                password:
                  type: string
                  format: password
                  description: Enter the password.
                  example: "password@123"
                image:
                  type: string
                  description: profile image in base64 format.
                  example: ""
      responses:
        200:
          description: Successfully updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Successfully updated user information"
                  token:
                    type: string
                    nullable: true
                    description: Authorization token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
  /user/update-contact/:
    put:
      summary: Update users contact information
      description: API to update users contact information.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - number
                - type
                - otp
                - email
              properties:
                number:
                  type: string
                  description: The user's mobile number (India number only acceptable)
                  example: "6382345678"
                type:
                  type: string
                  description: Enter the type number or Gmail.
                  example: "number"
                otp:
                  type: number
                  description: Enter the six-digit verification code.
                  example: 506845
                email:
                  type: string
                  format: email
                  description: Enter the email address.
                  example: "user@gmail.com"
      responses:
        200:
          description: Successfully updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "Successfully updated user contact information"
                  token:
                    type: string
                    nullable: true
                    description: Authorization token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
  /user/delete/:
    post:
      summary: delete user's account
      description: API to delete user's account
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - userids
              properties:
                userids:
                  type: string
                  description: Enter the user IDs, in comma-separated format.
                  example: "677870634a7430a117fb3689, 677871582667543228c7a919"
      responses:
        200:
          description: Successfully deleted user account
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Indicates success
                    example: true
                  message:
                    type: string
                    description: A success message
                    example: "2 user(s) deleted successfully"